<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backoffice.backoffice.mapper.EmployeeRolesMapper">

    <!--    직원에게 권한 부여-->
    <insert id="roleToEmployee" parameterType="EmployeeRolesDto">
        insert into "Employee_roles" (employee_id, role_id, granted_at)
        values (#{employeesId}, #{roleId}, #{grantedAt})
    </insert>
    <!--    직원에게 부여된 권한 목록 조회-->
    <select id="findRolesByEmployeeId" parameterType="Integer" resultType="String">
        select r.name
        from "Roles" r
                 inner join "Employee_roles" er on r.id = er.role_id
        where er.employee_id = #{employeesId}
    </select>

    <!--    직원의 특정 역할 제거-->
    <delete id="removeRoleFromEmployee" parameterType="map">
        delete
        from "Employee_roles"
        where employee_id = #{employeesId}
          and role_id = #{roleId}
    </delete>

    <!--    직원이 가지고 있는 권한 + 부서에 포함이 되어 있으니 부서가 가지고 있는 권한도 간접적으로 받는다.
    그럼으로 직원이 갖고있는 권한 + 부서에 간접적으로 포함된 권한-->
    <select id="findAllRolesByEmployeeId" parameterType="Integer" resultType="String">
        select distinct r.name
        from "Roles" r
        where r.id in (select er.role_id
                       from "Employee_roles" er
                       where er.employee_id = #{employeeId}

                       union
                       select dr.role_id
                       from "Department_roles" dr
                                inner join "Employees" e on dr.department_id = e.department_id
                       where e.id = #{employeeId})
    </select>


</mapper>